/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package art.gallery;

import java.awt.Image;
import java.io.FileInputStream;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.Query;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepak
 */
public class User extends javax.swing.JFrame {

    /**
     * Creates new form User
     */
    Connection conn;
    PreparedStatement ps;
    public User() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/art/gallery/bgimg/free_gallery_wall_by_mkrukowski-d42gwo1.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Gabriola", 1, 60)); // NOI18N
        jLabel2.setText("Gallery");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Gabriola", 1, 60)); // NOI18N
        jLabel3.setText("Art");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 100, -1, -1));

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paint_ID", "Artist_Name", "Caption", "Year", "Object", "Cost", "Image"
            }
        ));
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 860, 260));

        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search by paint name,object,category");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 260, -1));

        jTextField1.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 260, 30));

        jButton1.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel5.setText("Rating:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, -1, -1));

        jTextField2.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jPanel2.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 490, 260, 30));

        jLabel6.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel6.setText("Comment:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 480, -1, 40));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        jPanel2.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 550, 130, 30));

        jLabel7.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 50, 50));

        jButton3.setText("Back");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 20, 60, 40));

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 550, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/art/gallery/bgimg/art.png"))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 470, 320, 130));

        jButton4.setText("Buy");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 460, -1, -1));

        getContentPane().add(jPanel2, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void OpenDatabase()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/pri?zeroDateTimeBehavior=convertToNull","root","");  
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }
    
    public void CloseDatabase()
    {
        try 
        {
            conn.close();
        } 
        catch (SQLException e) 
        {
             e.printStackTrace();
        }           
    }
    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 jLabel7.setText("");
        populateJTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      //  DefaultTableModel model1=(DefaultTableModel)jTable1.getModel();
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int pid=Integer.parseInt(jLabel7.getText());
        String comment=jTextField2.getText();
        int rating=(Integer) jSpinner1.getValue();
        try
        {
            
            OpenDatabase();
           // Statement st=conn.createStatement();
            ps=conn.prepareStatement("insert into reviw values(?,?,?)");
            ps.setInt(1, pid);
            ps.setString(2, comment);
            ps.setInt(3, rating);
            int val=ps.executeUpdate();
            if(val>=1)
            JOptionPane.showConfirmDialog(null, "Thank you for Comments", "Review", JOptionPane.DEFAULT_OPTION,JOptionPane.PLAIN_MESSAGE);
            CloseDatabase();
            jTextField2.setText("");
            jSpinner1.setValue(0);
            jTextField1.setText("");
            jLabel7.setText("");
            OpenDatabase();
            CallableStatement cStmt = conn.prepareCall("{call review_rating()}");
           ResultSet rs=cStmt.executeQuery();
            CloseDatabase();
        }
        catch(Exception e)
        {
            JOptionPane.showConfirmDialog(null, "Sorry, review is unsuccessfull", "Review", JOptionPane.DEFAULT_OPTION,JOptionPane.WARNING_MESSAGE);
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new User_Main().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        new sales().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    public void populateJTable(){
        User.MyQuery mq = new User.MyQuery();
        ArrayList<User.Product2> list = mq.BindTable();
        String[] columnName = {"Paint_ID","Artist_Name","Caption","Year","Object","Cost","Review_Rating","Image"};
        Object[][] rows = new Object[list.size()][9];
        for(int i = 0; i < list.size(); i++){
            
            rows[i][0] = list.get(i).getPID();
            rows[i][1] = list.get(i).getName();
            rows[i][2] = list.get(i).getCaption();
            rows[i][3] = list.get(i).getYrs();
            rows[i][4] = list.get(i).getObject();
            rows[i][5] = list.get(i).getCost();
            rows[i][6] = list.get(i).getRating();
            if(list.get(i).getMyImage1() != null){
                
             ImageIcon image = new ImageIcon(new ImageIcon(list.get(i).getMyImage1()).getImage()
             .getScaledInstance(150, 120, Image.SCALE_SMOOTH) );   
                
            rows[i][7] = image;
            }
            else{
                rows[i][7] = null;
            }
            rows[i][8] = list.get(i).getMyImage1();
            
        }
        
        User.TheModel model = new User.TheModel(rows, columnName);
        jTable1.setModel(model);
        jTable1.setRowHeight(120);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int selectedRowIndex=jTable1.getSelectedRow();
        jLabel7.setText(model.getValueAt(selectedRowIndex, 0).toString());
            }
        });
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    public class Product2 {

    private String caption;
    private int yrs;
    private String Categories;
    private String object;
    private int cost;
    private byte[] Image1;
    private int pid;
    private String name;
    private float rating;
    public Product2(){}
    
    public Product2(int pid,String name,String caption, int yrs, String Category, String object,byte[] image1,float rating, int cost){
        this.pid=pid;
        this.name=name;
        this.caption = caption;
        this.yrs = yrs;
        this.Categories = Category;
        this.object = object;
        this.Image1 = image1;
        this.cost = cost;
        this.rating=rating;
       
    }
    
    
    public String getCaption(){
      return caption;
    }
    
    public void setCaption(String Caption){
        this.caption = Caption;
    }
    
    public String getName(){
      return name;
    }
    
    public void setName(String name){
        this.name = name;
    }
    
    
    public int getPID(){
      return pid;
    }
    
    public void setPID(int pid){
        this.pid = pid;
    }
    public float getRating(){
      return rating;
    }
    
    public void setRating(float rating){
        this.rating = rating;
    }
    
    
    public int getYrs(){
        return yrs;
    }
    
    public void setYrs(int yrs){
        this.yrs = yrs;
    }
    
    public String getCategory(){
        return Categories;
    }
    
    public void setCategory(String ctg){
        this.Categories = ctg;
    }
    
    public String getObject(){
        return object;
    }
    
    public void setObject(String obj){
        this.object = obj;
    }
    
    public int getCost(){
        return cost;
    }
    
    public void setCost(int cost){
        this.cost = cost;
    }
    
    public byte[] getMyImage1(){
        return Image1;
    }
}



public class MyQuery {
    
   public Connection getConnection(){
        Connection con = null;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pri?zeroDateTimeBehavior=convertToNull", "root","");
        } catch (SQLException ex) {
            Logger.getLogger(Query.class.getName()).log(Level.SEVERE, null, ex);
        }
        return con;
    }
    
    public ArrayList<Product2> BindTable(){
        
   ArrayList<Product2> list = new ArrayList<Product2>();
   Connection con = getConnection();
   Statement st;
   ResultSet rs;
   
   try {
   st = con.createStatement();
   rs = st.executeQuery("SELECT `p_id`,`name`,`caption`, `yrs`, `category`, `object`, `painting_pic`, `cost`,`total_rating` FROM painting p,artist a where (p.a_id=a.a_id) and  (category='"+jTextField1.getText()+"' or object='"+jTextField1.getText()+"' or caption='"+jTextField1.getText()+"')");
   
   Product2 p;
   while(rs.next()){
   p = new Product2(
   rs.getInt("p_id"),
   rs.getString("name"),
   rs.getString("caption"),
   rs.getInt("yrs"),
   rs.getString("category"),
   rs.getString("object"),
   rs.getBytes("painting_pic"),
   rs.getFloat("total_rating"),
   rs.getInt("cost")
   );
   list.add(p);
   }
   
   } catch (SQLException ex) {
       JOptionPane.showMessageDialog(null, "Not found");
   }
   return list;
   }
}







public class TheModel extends AbstractTableModel {

    private String[] columns;
    private Object[][] rows;
    
    public TheModel(){}
    
    public TheModel(Object[][] data, String[] columnName){
    
        this.rows = data;
        this.columns = columnName;
    }

    
    public Class getColumnClass(int column){
// 4 is the index of the column image
        if(column == 7){
            return Icon.class;
        }
        else{
            return getValueAt(0,column).getClass();
        }
    }
    
    
    public int getRowCount() {
     return this.rows.length;
    }

    public int getColumnCount() {
     return this.columns.length;
    }

    
    public Object getValueAt(int rowIndex, int columnIndex) {
    
    return this.rows[rowIndex][columnIndex];
    }
    public String getColumnName(int col){
        return this.columns[col];
    }


}









}
